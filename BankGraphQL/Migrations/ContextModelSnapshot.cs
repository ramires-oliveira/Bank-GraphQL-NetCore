// <auto-generated />
using System;
using BankGraphQL.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankGraphQL.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BankGraphQL.Domain.Account", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-0000-000000000001"),
                            Active = true,
                            DataCreate = new DateTime(2023, 7, 16, 16, 12, 55, 583, DateTimeKind.Local).AddTicks(9750),
                            Number = "50150",
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Value = 1000.00m
                        });
                });

            modelBuilder.Entity("BankGraphQL.Domain.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Active = true,
                            DataCreate = new DateTime(2023, 7, 16, 16, 12, 55, 583, DateTimeKind.Local).AddTicks(9545),
                            Email = "user1@user1.com",
                            Name = "User 1"
                        });
                });

            modelBuilder.Entity("BankGraphQL.Domain.Account", b =>
                {
                    b.HasOne("BankGraphQL.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
